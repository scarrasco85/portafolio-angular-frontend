{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app.component.html","./src/app/components/about/about.component.html","./src/app/components/contact/contact.component.html","./src/app/components/create-project/create-project.component.html","./src/app/components/detail-project/detail-project.component.html","./src/app/components/edit-project/edit-project.component.html","./src/app/components/error/error.component.html","./src/app/components/projects/projects.component.html","./node_modules/tslib/tslib.es6.js","./src/app/app-routing.module.ts","./src/app/app.component.css","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/components/about/about.component.css","./src/app/components/about/about.component.ts","./src/app/components/contact/contact.component.css","./src/app/components/contact/contact.component.ts","./src/app/components/create-project/create-project.component.css","./src/app/components/create-project/create-project.component.ts","./src/app/components/detail-project/detail-project.component.css","./src/app/components/detail-project/detail-project.component.ts","./src/app/components/edit-project/edit-project.component.css","./src/app/components/edit-project/edit-project.component.ts","./src/app/components/error/error.component.css","./src/app/components/error/error.component.ts","./src/app/components/projects/projects.component.css","./src/app/components/projects/projects.component.ts","./src/app/models/project.ts","./src/app/services/global.ts","./src/app/services/project.service.ts","./src/app/services/upload.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,wE;;;;;;;;;;;;ACZA;AAAe,+zBAAgwB,c;;;;;;;;;;;;ACA/wB;AAAe,4FAA6B,OAAO,eAAe,UAAU,cAAc,OAAO,s8C;;;;;;;;;;;;ACAjG;AAAe,8MAA+I,qCAAqC,qT;;;;;;;;;;;;ACAnM;AAAe,mGAAoC,OAAO,omF;;;;;;;;;;;;ACA1D;AAAe,+dAAga,iCAAiC,iFAAiF,gBAAgB,mBAAmB,uBAAuB,kBAAkB,oBAAoB,iBAAiB,iBAAiB,wsB;;;;;;;;;;;;ACAnqB;AAAe,+iBAAgf,OAAO,4gEAA4gE,iCAAiC,28B;;;;;;;;;;;;ACAnjF;AAAe,sF;;;;;;;;;;;;ACAf;AAAe,meAAoa,yCAAyC,gfAAgf,iCAAiC,6DAA6D,cAAc,oBAAoB,kBAAkB,yP;;;;;;;;;;;;ACA9lC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA,+DAA+D;AAC/D;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,UAAU,gBAAgB,sCAAsC,iBAAiB,EAAE;AACnF,yBAAyB,uDAAuD;AAChF;AACA;;AAEO;AACP;AACA,mBAAmB,sBAAsB;AACzC;AACA;;AAEO;AACP;AACA,gDAAgD,OAAO;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;;AAEO;AACP;AACA;AACA;AACA;AACA,4DAA4D,cAAc;AAC1E;AACA;AACA;AACA;AACA;;AAEO;AACP;AACA;AACA,4CAA4C,QAAQ;AACpD;AACA;;AAEO;AACP,mCAAmC,oCAAoC;AACvE;;AAEO;AACP;AACA;;AAEO;AACP;AACA,mCAAmC,MAAM,6BAA6B,EAAE,YAAY,WAAW,EAAE;AACjG,kCAAkC,MAAM,iCAAiC,EAAE,YAAY,WAAW,EAAE;AACpG,+BAA+B,iEAAiE,uBAAuB,EAAE,4BAA4B;AACrJ;AACA,KAAK;AACL;;AAEO;AACP,aAAa,6BAA6B,0BAA0B,aAAa,EAAE,qBAAqB;AACxG,gBAAgB,qDAAqD,oEAAoE,aAAa,EAAE;AACxJ,sBAAsB,sBAAsB,qBAAqB,GAAG;AACpE;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC;AACvC,kCAAkC,SAAS;AAC3C,kCAAkC,WAAW,UAAU;AACvD,yCAAyC,cAAc;AACvD;AACA,6GAA6G,OAAO,UAAU;AAC9H,gFAAgF,iBAAiB,OAAO;AACxG,wDAAwD,gBAAgB,QAAQ,OAAO;AACvF,8CAA8C,gBAAgB,gBAAgB,OAAO;AACrF;AACA,iCAAiC;AACjC;AACA;AACA,SAAS,YAAY,aAAa,OAAO,EAAE,UAAU,WAAW;AAChE,mCAAmC,SAAS;AAC5C;AACA;;AAEO;AACP;AACA;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,MAAM,gBAAgB;AACzC;AACA;AACA;AACA;AACA,iBAAiB,sBAAsB;AACvC;AACA;AACA;;AAEO;AACP,4BAA4B,sBAAsB;AAClD;AACA;AACA;;AAEO;AACP,iDAAiD,QAAQ;AACzD,wCAAwC,QAAQ;AAChD,wDAAwD,QAAQ;AAChE;AACA;AACA;;AAEO;AACP;AACA;;AAEO;AACP;AACA;AACA,iBAAiB,sFAAsF,aAAa,EAAE;AACtH,sBAAsB,gCAAgC,qCAAqC,0CAA0C,EAAE,EAAE,GAAG;AAC5I,2BAA2B,MAAM,eAAe,EAAE,YAAY,oBAAoB,EAAE;AACpF,sBAAsB,oGAAoG;AAC1H,6BAA6B,uBAAuB;AACpD,4BAA4B,wBAAwB;AACpD,2BAA2B,yDAAyD;AACpF;;AAEO;AACP;AACA,iBAAiB,4CAA4C,SAAS,EAAE,qDAAqD,aAAa,EAAE;AAC5I,yBAAyB,6BAA6B,oBAAoB,gDAAgD,gBAAgB,EAAE,KAAK;AACjJ;;AAEO;AACP;AACA;AACA,2GAA2G,sFAAsF,aAAa,EAAE;AAChN,sBAAsB,8BAA8B,gDAAgD,uDAAuD,EAAE,EAAE,GAAG;AAClK,4CAA4C,sCAAsC,UAAU,oBAAoB,EAAE,EAAE,UAAU;AAC9H;;AAEO;AACP,gCAAgC,uCAAuC,aAAa,EAAE,EAAE,OAAO,kBAAkB;AACjH;AACA;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;;AAEO;AACP,4CAA4C;AAC5C;;;;;;;;;;;;;;;;;;;;;;;;;;ACnMyC;AACc;AAEvD,iCAAiC;AACmC;AACS;AACiB;AACpB;AACN;AAC0B;AACN;AAExF,MAAM,MAAM,GAAW;IACtB,EAAC,IAAI,EAAE,EAAE,EAAE,SAAS,EAAE,gFAAc,EAAC;IACrC,EAAC,IAAI,EAAE,UAAU,EAAE,SAAS,EAAE,gFAAc,EAAC;IAC7C,EAAC,IAAI,EAAE,WAAW,EAAE,SAAS,EAAE,yFAAiB,EAAC;IACjD,EAAC,IAAI,EAAE,gBAAgB,EAAE,SAAS,EAAE,0GAAsB,EAAC;IAC3D,EAAC,IAAI,EAAE,UAAU,EAAE,SAAS,EAAE,sFAAgB,EAAC;IAC/C,EAAC,IAAI,EAAE,cAAc,EAAE,SAAS,EAAE,0GAAsB,EAAC;IACzD,EAAC,IAAI,EAAE,qBAAqB,EAAE,SAAS,EAAE,oGAAoB,EAAC;IAC9D,EAAC,IAAI,EAAE,IAAI,EAAE,SAAS,EAAE,gFAAc,EAAC;CACvC,CAAC;AAMF,IAAa,gBAAgB,GAA7B,MAAa,gBAAgB;CAAI;AAApB,gBAAgB;IAJ5B,8DAAQ,CAAC;QACR,OAAO,EAAE,CAAC,4DAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;QACvC,OAAO,EAAE,CAAC,4DAAY,CAAC;KACxB,CAAC;GACW,gBAAgB,CAAI;AAAJ;;;;;;;;;;;;;AC3B7B;AAAe,6GAA8C,+H;;;;;;;;;;;;;;;;;ACAnB;AAO1C,IAAa,YAAY,GAAzB,MAAa,YAAY;IALzB;QAME,UAAK,GAAG,6BAA6B,CAAC;IACxC,CAAC;CAAA;AAFY,YAAY;IALxB,+DAAS,CAAC;QACT,QAAQ,EAAE,UAAU;QACpB,yMAAmC;;KAEpC,CAAC;GACW,YAAY,CAExB;AAFwB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACPzB,oBAAoB;AACsC;AACjB;AACzC,4CAA4C;AACW;AACvD,oDAAoD;AACP;AAC7C,wBAAwB;AACgC;AAExD,wBAAwB;AACuB;AACqB;AACS;AACiB;AACpB;AACN;AAC0B;AACN;AACxF,2BAA2B;AAC0B;AAuBrD,IAAa,SAAS,GAAtB,MAAa,SAAS;CAAI;AAAb,SAAS;IArBrB,8DAAQ,CAAC;QACR,YAAY,EAAE;YACZ,2DAAY;YACZ,gFAAc;YACd,yFAAiB;YACjB,0GAAsB;YACtB,uFAAgB;YAChB,iFAAc;YACd,2GAAsB;YACtB,qGAAoB;SACrB;QACD,OAAO,EAAE;YACP,uEAAa;YACb,oEAAgB;YAChB,qEAAgB;YAChB,0DAAW;YACX,mEAAmB;SACpB;QACD,SAAS,EAAE,EAAE;QACb,SAAS,EAAE,CAAC,2DAAY,CAAC;KAC1B,CAAC;GACW,SAAS,CAAI;AAAJ;;;;;;;;;;;;;AC3CtB;AAAe,uEAAQ,eAAe,qBAAqB,uBAAuB,wBAAwB,qBAAqB,GAAG,+CAA+C,oEAAoE,oBAAoB,kCAAkC,wBAAwB,GAAG,2DAA2D,oBAAoB,gBAAgB,oBAAoB,uBAAuB,GAAG,iFAAiF,eAAe,qBAAqB,uBAAuB,yBAAyB,oBAAoB,GAAG,uCAAuC,kCAAkC,wBAAwB,uBAAuB,GAAG,0CAA0C,sBAAsB,wBAAwB,GAAG,mDAAmD,+5D;;;;;;;;;;;;;;;;;ACAt2B;AAOlD,IAAa,cAAc,GAA3B,MAAa,cAAc;IAMxB;QACD,IAAI,CAAC,KAAK,GAAG,iBAAiB,CAAC;QAC7B,IAAI,CAAC,QAAQ,GAAG,mBAAmB,CAAC;QACpC,IAAI,CAAC,KAAK,GAAG,0BAA0B,CAAC;IACzC,CAAC;IAED,QAAQ;IACR,CAAC;CAEH;AAfY,cAAc;IAL1B,+DAAS,CAAC;QACT,QAAQ,EAAE,WAAW;QACrB,8NAAqC;;KAEtC,CAAC;GACW,cAAc,CAe1B;AAf0B;;;;;;;;;;;;;ACP3B;AAAe,uEAAQ,gBAAgB,iBAAiB,qBAAqB,GAAG,iBAAiB,gBAAgB,qBAAqB,4BAA4B,qBAAqB,GAAG,qDAAqD,oEAAoE,oBAAoB,0BAA0B,GAAG,iEAAiE,oBAAoB,gBAAgB,oBAAoB,uBAAuB,GAAG,+CAA+C,+sC;;;;;;;;;;;;;;;;;;;ACApf;AAGlD,yBAAyB;AACuC;AAChE,iCAAiC;AACc;AAO/C,IAAa,gBAAgB,GAA7B,MAAa,gBAAgB;IAI3B,YACU,eAA+B;QAA/B,oBAAe,GAAf,eAAe,CAAgB;QAEvC,IAAI,CAAC,GAAG,GAAG,uDAAM,CAAC,GAAG,CAAC;IACxB,CAAC;IAED,QAAQ;IACR,CAAC;CAEF;;YAR4B,wEAAc;;AAL9B,gBAAgB;IAL5B,+DAAS,CAAC;QACT,QAAQ,EAAE,aAAa;QACvB,oOAAuC;;KAExC,CAAC;GACW,gBAAgB,CAa5B;AAb4B;;;;;;;;;;;;;ACb7B;AAAe,6GAA8C,+K;;;;;;;;;;;;;;;;;;;;;ACAX;AAClD,uBAAuB;AACwB;AAC/C,yBAAyB;AACuC;AAChE,sCAAsC;AACwB;AAC9D,iCAAiC;AACc;AAU/C,IAAa,sBAAsB,GAAnC,MAAa,sBAAsB;IAclC;IACC,sCAAsC;IAC9B,eAA+B,EAC/B,cAA6B;QAD7B,oBAAe,GAAf,eAAe,CAAgB;QAC/B,mBAAc,GAAd,cAAc,CAAe;QAErC,+BAA+B;QAC/B,IAAI,CAAC,KAAK,GAAG,sBAAsB,CAAC;QACpC,IAAI,CAAC,IAAI,GAAG,IAAI,IAAI,EAAE,CAAC;QACvB,6DAA6D;QAC7D,IAAI,CAAC,OAAO,GAAG,IAAI,uDAAO,CAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE,EAAC,EAAE,EAAC,EAAE,CAAC,CAAC;QACtE,IAAI,CAAC,MAAM,GAAG,EAAE,CAAC;IACjB,CAAC;IAEF,QAAQ;IACR,CAAC;IAED,qGAAqG;IACrG,qBAAqB;IACrB,QAAQ,CAAC,IAAI;QAEZ;uFAC+E;QAC/E,uBAAuB;QACvB,IAAI,CAAC,eAAe,CAAC,WAAW,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,SAAS,CACvD,QAAQ,CAAC,EAAE;YACV,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;YACtB,0CAA0C;YAC1C,IAAG,QAAQ,CAAC,OAAO,EAAC;gBACnB,oEAAoE;gBACpE,0CAA0C;gBAC1C;;;;kBAIE;gBACF,oDAAoD;gBACpD,IAAG,IAAI,CAAC,aAAa,EAAC;oBACrB,IAAI,CAAC,cAAc,CAAC,eAAe,CAAC,uDAAM,CAAC,GAAG,GAAC,gBAAgB,GAAC,QAAQ,CAAC,OAAO,CAAC,GAAG,EAAE,EAAE,EAAE,IAAI,CAAC,aAAa,EAAE,OAAO,CAAC;yBACrH,IAAI,CAAC,CAAC,MAAU,EAAE,EAAE;wBACpB,wEAAwE;wBACxE,IAAI,CAAC,WAAW,GAAG,MAAM,CAAC,OAAO,CAAC;wBAClC,IAAI,CAAC,MAAM,GAAG,SAAS,CAAC;wBACxB,IAAI,CAAC,KAAK,EAAE,CAAC;wBACb,OAAO,CAAC,GAAG,CAAC,iDAAiD,EAAE,MAAM,CAAC,CAAC;oBACxE,CAAC,CAAC,CAAC;oBACJ,4EAA4E;iBAC3E;qBAAI;oBACJ,wEAAwE;oBACxE,IAAI,CAAC,WAAW,GAAG,QAAQ,CAAC,OAAO,CAAC;oBACpC,IAAI,CAAC,MAAM,GAAG,SAAS,CAAC;oBACxB,IAAI,CAAC,KAAK,EAAE,CAAC;oBACb,OAAO,CAAC,GAAG,CAAC,iDAAiD,EAAE,QAAQ,CAAC,CAAC;iBACzE;aACD;QACF,CAAC,EACD,KAAK,CAAC,EAAE;YACP,OAAO,CAAC,GAAG,CAAM,KAAK,CAAC,CAAC;YACxB,IAAI,CAAC,MAAM,GAAG,QAAQ,CAAC;QACxB,CAAC,CACD,CAAC;IACH,CAAC;IAED,uGAAuG;IACvG,6DAA6D;IAC7D,eAAe,CAAC,SAAc;QAC7B,kGAAkG;QAClG,yGAAyG;QACzG,+FAA+F;QAC/F,IAAI,CAAC,aAAa,GAAgB,SAAS,CAAC,MAAM,CAAC,KAAK,CAAC;IAC1D,CAAC;CAED;;YArE0B,wEAAc;YACf,sEAAa;;AAjB1B,sBAAsB;IAPlC,+DAAS,CAAC;QACT,QAAQ,EAAE,oBAAoB;QAC9B,yPAA8C;QAE9C,kCAAkC;QAClC,SAAS,EAAE,CAAC,wEAAc,EAAE,sEAAa,CAAC;;KAC3C,CAAC;GACW,sBAAsB,CAqFlC;AArFkC;;;;;;;;;;;;;AClBnC;AAAe,+ZAAgW,gBAAgB,eAAe,GAAG,yCAAyC,6EAA6E,GAAG,oCAAoC,gBAAgB,eAAe,sBAAsB,GAAG,6IAA6I,mBAAmB,oBAAoB,iBAAiB,qBAAqB,iBAAiB,2CAA2C,oBAAoB,eAAe,gBAAgB,uBAAuB,uBAAuB,0BAA0B,GAAG,iBAAiB,wBAAwB,GAAG,mBAAmB,wBAAwB,GAAG,oBAAoB,wBAAwB,gBAAgB,GAAG,aAAa,mBAAmB,sBAAsB,qBAAqB,GAAG,6CAA6C,m8E;;;;;;;;;;;;;;;;;;;;;ACA5tC;AAClD,uBAAuB;AACwB;AAC/C,yBAAyB;AACuC;AAChE,iCAAiC;AACc;AAC/C,0EAA0E;AACT;AAQjE,IAAa,sBAAsB,GAAnC,MAAa,sBAAsB;IAShC;IACC,iDAAiD;IACzC,eAA+B,EAC/B,OAAe,EACf,MAAsB;QAFtB,oBAAe,GAAf,eAAe,CAAgB;QAC/B,YAAO,GAAP,OAAO,CAAQ;QACf,WAAM,GAAN,MAAM,CAAgB;QAE9B,IAAI,CAAC,GAAG,GAAG,uDAAM,CAAC,GAAG,CAAC;QACxB,IAAI,CAAC,OAAO,GAAG,IAAI,uDAAO,CAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAE,CAAC,EAAC,EAAE,EAAC,EAAE,CAAC,CAAC;QACjD,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;IACnB,CAAC;IAEF,QAAQ;QAEP,+FAA+F;QACjG,2DAA2D;QAC3D,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,SAAS,CAAC,MAAM,CAAC,EAAE;YACrC,IAAI,EAAE,GAAG,MAAM,CAAC,EAAE,CAAC;YAEnB,sEAAsE;YACtE,IAAI,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC;QACrB,CAAC,CAAC,CAAC;IACF,CAAC;IAED,iGAAiG;IACnG,kDAAkD;IAClD;;MAEE;IACF,UAAU,CAAC,EAAE;QACZ,4FAA4F;QAC5F,8BAA8B;QAC9B,IAAI,CAAC,eAAe,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC,SAAS,CAC5C,QAAQ,CAAC,EAAE;YACV,oFAAoF;YACpF,sCAAsC;YACtC,IAAI,CAAC,OAAO,GAAG,QAAQ,CAAC,OAAO,CAAC;YAChC,sDAAsD;QACvD,CAAC,EACD,KAAK,CAAC,EAAE;YACP,OAAO,CAAC,GAAG,CAAM,KAAK,CAAC,CAAC;QACzB,CAAC,CACD,CAAC;IACH,CAAC;IAED,oHAAoH;IACpH,aAAa,CAAC,EAAE;QAEf,IAAI,CAAC,eAAe,CAAC,aAAa,CAAC,EAAE,CAAC,CAAC,SAAS,CAC/C,QAAQ,CAAC,EAAE;YACV,sEAAsE;YACtE,IAAG,QAAQ,CAAC,OAAO,EAAC;gBACnB,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC;aACtC;QACF,CAAC,EACD,KAAK,CAAC,EAAE;YACP,OAAO,CAAC,GAAG,CAAC,iCAAiC,EAAO,KAAK,CAAC,CAAC;QAC5D,CAAC,CACD,CAAC;IACH,CAAC;IAED,6DAA6D;IAC7D,UAAU,CAAC,OAAO;QACjB,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;IACxB,CAAC;CAED;;YA/D4B,wEAAc;YACtB,sDAAM;YACP,8DAAc;;AAbrB,sBAAsB;IANlC,+DAAS,CAAC;QACT,QAAQ,EAAE,oBAAoB;QAC9B,yPAA8C;QAE9C,SAAS,EAAE,CAAC,wEAAc,CAAC;;KAC5B,CAAC;GACW,sBAAsB,CA0ElC;AA1EkC;;;;;;;;;;;;;AChBnC;AAAe,6GAA8C,2K;;;;;;;;;;;;;;;;;;;;;ACAX;AAGlD,yBAAyB;AACuC;AAChE,sCAAsC;AACwB;AAC9D,iCAAiC;AACc;AAC/C,0EAA0E;AACT;AASjE,IAAa,oBAAoB,GAAjC,MAAa,oBAAoB;IAgB9B;IACC,qDAAqD;IAC/C,eAA+B,EAC/B,cAA6B;IACrC,mBAAmB;IACX,MAAsB;QAHtB,oBAAe,GAAf,eAAe,CAAgB;QAC/B,mBAAc,GAAd,cAAc,CAAe;QAE7B,WAAM,GAAN,MAAM,CAAgB;QAE5B,IAAI,CAAC,KAAK,GAAG,iBAAiB,CAAC;QACjC,IAAI,CAAC,GAAG,GAAG,uDAAM,CAAC,GAAG,CAAC;IACpB,CAAC;IAEF,QAAQ;QACP,+FAA+F;QACjG,qGAAqG;QACrG,uBAAuB;QACvB,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,SAAS,CAAC,MAAM,CAAC,EAAE;YACrC,0CAA0C;YAC1C,IAAI,EAAE,GAAG,MAAM,CAAC,EAAE,CAAC;YAEnB,sEAAsE;YACtE,IAAI,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC;QACrB,CAAC,CAAC,CAAC;IACF,CAAC;IAED,iGAAiG;IACnG,kDAAkD;IAClD,UAAU,CAAC,EAAE;QACZ,4FAA4F;QAC5F,8BAA8B;QAC9B,IAAI,CAAC,eAAe,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC,SAAS,CAC5C,QAAQ,CAAC,EAAE;YACV,oFAAoF;YACpF,sCAAsC;YACtC,IAAI,CAAC,OAAO,GAAG,QAAQ,CAAC,OAAO,CAAC;YAChC,sDAAsD;QACvD,CAAC,EACD,KAAK,CAAC,EAAE;YACP,OAAO,CAAC,GAAG,CAAM,KAAK,CAAC,CAAC;QACzB,CAAC,CACD,CAAC;IACH,CAAC;IAED,gGAAgG;IAChG,4CAA4C;IAC5C,QAAQ;QACP,IAAI,CAAC,eAAe,CAAC,aAAa,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,SAAS,CACzD,QAAQ,CAAC,EAAE;YACV,0CAA0C;YAC1C,IAAG,QAAQ,CAAC,OAAO,EAAC;gBACpB,uEAAuE;gBACtE,0CAA0C;gBAC1C;;;;kBAIE;gBACF,oDAAoD;gBACpD,IAAG,IAAI,CAAC,aAAa,EAAC;oBACrB,IAAI,CAAC,cAAc,CAAC,eAAe,CAAC,uDAAM,CAAC,GAAG,GAAC,gBAAgB,GAAC,QAAQ,CAAC,OAAO,CAAC,GAAG,EAAE,EAAE,EAAE,IAAI,CAAC,aAAa,EAAE,OAAO,CAAC;yBACrH,IAAI,CAAC,CAAC,MAAU,EAAE,EAAE;wBACpB,wEAAwE;wBACxE,IAAI,CAAC,WAAW,GAAG,MAAM,CAAC,OAAO,CAAC,GAAG,CAAC;wBACtC,IAAI,CAAC,MAAM,GAAG,SAAS,CAAC;oBACzB,CAAC,CAAC,CAAC;oBACH,4EAA4E;iBAC5E;qBAAI;oBACJ,wEAAwE;oBACxE,IAAI,CAAC,WAAW,GAAG,QAAQ,CAAC,OAAO,CAAC,GAAG,CAAC;oBACxC,IAAI,CAAC,MAAM,GAAG,SAAS,CAAC;iBACxB;aAED;iBAAI;gBACJ,IAAI,CAAC,MAAM,GAAG,QAAQ,CAAC;aACvB;QACF,CAAC,EACD,KAAK,CAAC,EAAE;YACP,OAAO,CAAC,GAAG,CAAM,KAAK,CAAC,CAAC;YACxB,IAAI,CAAC,MAAM,GAAG,QAAQ,CAAC;QACxB,CAAC,CACD,CAAC;IACH,CAAC;IAED,uEAAuE;IACvE,qGAAqG;IACrG,6DAA6D;IAC7D,eAAe,CAAC,SAAc;QAC7B,8FAA8F;QAC9F,6GAA6G;QAC7G,0BAA0B;QAC1B,IAAI,CAAC,aAAa,GAAgB,SAAS,CAAC,MAAM,CAAC,KAAK,CAAC;IAC1D,CAAC;CAED;;YA1F0B,wEAAc;YACf,sEAAa;YAErB,8DAAc;;AArBnB,oBAAoB;IAPhC,+DAAS,CAAC;QACT,QAAQ,EAAE,kBAAkB;QAC5B,mPAA4C;QAE3C,+DAA+D;QAChE,SAAS,EAAE,CAAC,wEAAc,EAAE,sEAAa,CAAC;;KAC3C,CAAC;GACW,oBAAoB,CA4GhC;AA5GgC;;;;;;;;;;;;;ACnBjC;AAAe,6GAA8C,uJ;;;;;;;;;;;;;;;;;ACAX;AAOlD,IAAa,cAAc,GAA3B,MAAa,cAAc;IAEzB,gBAAgB,CAAC;IAEjB,QAAQ;IACR,CAAC;CAEF;AAPY,cAAc;IAL1B,+DAAS,CAAC;QACT,QAAQ,EAAE,WAAW;QACrB,8NAAqC;;KAEtC,CAAC;GACW,cAAc,CAO1B;AAP0B;;;;;;;;;;;;;ACP3B;AAAe,0EAAW,mBAAmB,sBAAsB,GAAG,oEAAoE,qBAAqB,mBAAmB,gBAAgB,eAAe,uBAAuB,sBAAsB,uBAAuB,wBAAwB,GAAG,4NAA4N,gBAAgB,kBAAkB,qBAAqB,GAAG,kEAAkE,gBAAgB,GAAG,8DAA8D,0BAA0B,iBAAiB,GAAG,2CAA2C,gBAAgB,mBAAmB,gBAAgB,4BAA4B,uBAAuB,GAAG,+CAA+C,26D;;;;;;;;;;;;;;;;;;;ACAx5B;AAGlD,yBAAyB;AACuC;AAChE,iCAAiC;AACc;AAQ/C,IAAa,iBAAiB,GAA9B,MAAa,iBAAiB;IAQ7B,YACU,eAA+B;QAA/B,oBAAe,GAAf,eAAe,CAAgB;QAExC,IAAI,CAAC,GAAG,GAAG,uDAAM,CAAC,GAAG,CAAC;QACtB,IAAI,CAAC,UAAU,GAAG,CAAC,CAAC;IACpB,CAAC;IAEF,QAAQ;QACP,oEAAoE;QACpE,IAAI,CAAC,WAAW,EAAE,CAAC;IACpB,CAAC;IAED,6FAA6F;IAC7F,kGAAkG;IAClG,WAAW;QACV,IAAI,CAAC,eAAe,CAAC,WAAW,EAAE,CAAC,SAAS,CAC3C,QAAQ,CAAC,EAAE;YACV,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;YACtB,yFAAyF;YACzF,IAAG,QAAQ,CAAC,QAAQ,EAAC;gBACpB,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC,QAAQ,CAAC;aAClC;QACF,CAAC,EACD,KAAK,CAAC,EAAE;YACP,OAAO,CAAC,GAAG,CAAM,KAAK,CAAC,CAAC;QACzB,CAAC,CACD,CAAC;IACH,CAAC;CAED;;YA5B2B,wEAAc;;AAT7B,iBAAiB;IAN7B,+DAAS,CAAC;QACT,QAAQ,EAAE,cAAc;QACxB,uOAAwC;QAExC,SAAS,EAAE,CAAC,wEAAc,CAAC;;KAC5B,CAAC;GACW,iBAAiB,CAqC7B;AArC6B;;;;;;;;;;;;;;;;;ACd9B,yDAAyD;AAClD,MAAM,OAAO;IAEnB,YACQ,GAAW,EACX,IAAY,EACZ,WAAmB,EACnB,QAAgB,EAChB,IAAY,EACZ,KAAa,EACb,KAAa;QANb,QAAG,GAAH,GAAG,CAAQ;QACX,SAAI,GAAJ,IAAI,CAAQ;QACZ,gBAAW,GAAX,WAAW,CAAQ;QACnB,aAAQ,GAAR,QAAQ,CAAQ;QAChB,SAAI,GAAJ,IAAI,CAAQ;QACZ,UAAK,GAAL,KAAK,CAAQ;QACb,UAAK,GAAL,KAAK,CAAQ;IACnB,CAAC;CACH;;;;;;;;;;;;;;;;;ACZD,kDAAkD;AAC3C,IAAI,MAAM,GAAG;IACnB,cAAc;IACd,mCAAmC;IACnC,GAAG,EAAE,sDAAsD;CAC3D,CAAC;;;;;;;;;;;;;ACLF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sCAAsC;;AAEtC,+BAA+B;AACY;AAC3C,kCAAkC;AAC6B;AAS/D,kDAAkD;AAChB;AAIlC,IAAa,cAAc,GAA3B,MAAa,cAAc;IAG1B,YACS,KAAiB;QAAjB,UAAK,GAAL,KAAK,CAAY;QAEzB,IAAI,CAAC,GAAG,GAAG,8CAAM,CAAC,GAAG,CAAC;IACvB,CAAC;IAED,kBAAkB;IAClB,WAAW;QACV,OAAO,4CAA4C,CAAC;IACrD,CAAC;IAED,oFAAoF;IACpF,yDAAyD;IACzD,WAAW,CAAC,OAAgB;QAC3B,6EAA6E;QAC7E,IAAI,MAAM,GAAG,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC;QACrC,0FAA0F;QAC1F,qEAAqE;QACrE,IAAI,OAAO,GAAG,IAAI,gEAAW,EAAE,CAAC,GAAG,CAAC,cAAc,EAAE,kBAAkB,CAAC,CAAC;QACxE,0BAA0B;QAC1B,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,GAAC,eAAe,EAAE,MAAM,EAAE,EAAC,OAAO,EAAE,OAAO,EAAC,CAAC,CAAC;IAC9E,CAAC;IAED,sGAAsG;IACtG,2BAA2B;IAC3B,WAAW;QACV,IAAI,OAAO,GAAG,IAAI,gEAAW,EAAE,CAAC,GAAG,CAAC,cAAc,EAAE,kBAAkB,CAAC,CAAC;QACxE,OAAO,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,GAAC,cAAc,EAAE,EAAC,OAAO,EAAE,OAAO,EAAC,CAAC,CAAC;IACpE,CAAC;IAED,2GAA2G;IAC3G,kDAAkD;IAClD,UAAU,CAAC,SAAS;QACnB,IAAI,OAAO,GAAG,IAAI,gEAAW,EAAE,CAAC,GAAG,CAAC,cAAc,EAAE,kBAAkB,CAAC,CAAC;QAExE,OAAO,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,GAAC,WAAW,GAAC,SAAS,EAAE,EAAC,OAAO,EAAE,OAAO,EAAC,CAAC,CAAC;IAC3E,CAAC;IAED,gFAAgF;IAChF,aAAa,CAAC,SAAS;QACtB,IAAI,OAAO,GAAG,IAAI,gEAAW,EAAE,CAAC,GAAG,CAAC,cAAc,EAAE,kBAAkB,CAAC,CAAC;QACxE,kDAAkD;QAClD,OAAO,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,GAAC,iBAAiB,GAAC,SAAS,EAAE,EAAC,OAAO,EAAE,OAAO,EAAC,CAAC,CAAC;IACpF,CAAC;IAED,uFAAuF;IACvF,aAAa,CAAC,OAAO;QACpB,4IAA4I;QAC5I,IAAI,MAAM,GAAG,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC;QACrC,IAAI,OAAO,GAAG,IAAI,gEAAW,EAAE,CAAC,GAAG,CAAC,cAAc,EAAE,kBAAkB,CAAC,CAAC;QACxE,0EAA0E;QAC1E,OAAO,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,GAAC,kBAAkB,GAAC,OAAO,CAAC,GAAG,EAAE,MAAM,EAAE,EAAC,OAAO,EAAE,OAAO,EAAC,CAAC,CAAC;IAC5F,CAAC;CACD;;YApDgB,+DAAU;;AAJd,cAAc;IAD1B,gEAAU,EAAE;GACA,cAAc,CAwD1B;AAxD0B;;;;;;;;;;;;;;;;;;;ACnBgB;AACT;AAGlC,IAAa,aAAa,GAA1B,MAAa,aAAa;IAGzB;QACC,IAAI,CAAC,GAAG,GAAG,8CAAM,CAAC,GAAG,CAAC;IACvB,CAAC;IAED,yFAAyF;IACzF,eAAe,CAAC,GAAW,EAAE,MAAqB,EAAE,KAAkB,EAAE,IAAY;QACnF,kGAAkG;QAClG,OAAO;QACP,OAAO,IAAI,OAAO,CAAC,UAAS,OAAO,EAAE,MAAM;YAC1C,4DAA4D;YAC5D,6FAA6F;YAC7F,2CAA2C;YAC3C,IAAI,QAAQ,GAAO,IAAI,QAAQ,EAAE,CAAC;YAClC,+FAA+F;YAC/F,wFAAwF;YACxF,IAAI,GAAG,GAAG,IAAI,cAAc,EAAE,CAAC;YAE/B,uEAAuE;YACvE;;;cAGE;YACF,KAAI,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,MAAM,EAAE,CAAC,EAAE,EAAC;gBACpC,0FAA0F;gBAC1F,8FAA8F;gBAC9F,QAAQ,CAAC,MAAM,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;aAE/C;YAED,6FAA6F;YAC7F,UAAU;YACV,GAAG,CAAC,kBAAkB,GAAG;gBACxB,IAAG,GAAG,CAAC,UAAU,IAAI,CAAC,EAAC;oBACtB,IAAG,GAAG,CAAC,MAAM,IAAI,GAAG,EAAC;wBACpB,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,CAAC;qBAClC;yBAAI;wBACJ,MAAM,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;qBACrB;iBAED;YACF,CAAC;YAED,+DAA+D;YAC/D,qGAAqG;YACrG,wGAAwG;YACxG,sDAAsD;YACtD,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,EAAE,IAAI,CAAC,CAAC;YAC5B,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QAEpB,CAAC,CAAC,CAAC;IACJ,CAAC;CACD;AAtDY,aAAa;IADzB,gEAAU,EAAE;GACA,aAAa,CAsDzB;AAtDyB;;;;;;;;;;;;;ACJ1B;AAAA;AAAA;AAAA,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;;AAEzD,MAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;;GAMG;AACH,mEAAmE;;;;;;;;;;;;;;;;;;;;ACfpB;AAC4B;AAE9B;AACY;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,gGAAsB,EAAE,CAAC,eAAe,CAAC,yDAAS,CAAC;KAChD,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","export default \"<!-- Header - Cabezera -->\\n<header>\\n  <ul>\\n    <li><a [routerLink]=\\\"['/sobre-mi']\\\" [routerLinkActive]=\\\"['actived']\\\">Sobre mi</a></li>\\n    <li><a [routerLink]=\\\"['/proyectos']\\\" [routerLinkActive]=\\\"['actived']\\\">Proyectos</a></li>\\n    <li id=\\\"logo\\\"><a href=\\\"#\\\">SC</a></li>\\n    <li><a [routerLink]=\\\"['/crear-proyecto']\\\" [routerLinkActive]=\\\"['actived']\\\">Crear proyecto</a></li>\\n    <li><a [routerLink]=\\\"['/contacto']\\\" [routerLinkActive]=\\\"['actived']\\\">Contacto</a></li>\\n  </ul>\\n</header>\\n<!-- Cuerpo - Body -->\\n<section id=\\\"content\\\">\\n  <!-- Los componentes se cargaran en la etiqueta router-oulet -->\\n  <router-outlet></router-outlet>\\n</section>\\n\\n<!-- Pié de página -->\\n<footer>\\n  Proyecto portafolio personal - Sergio Carrasco &copy;\\n</footer>\\n\"","export default \"<div id=\\\"title\\\">\\n\\t<h1>{{title}}</h1>\\n\\t<h2>{{subtitle}}</h2>\\n\\t<p>{{email}}</p>\\n</div>\\n\\n<article class=\\\"about\\\">\\n\\t<h2>Sobre mí</h2>\\n\\t<p>\\n\\t\\tLorem ipsum dolor sit amet consectetur adipiscing elit donec lacinia, quis fames platea aenean congue ultrices pulvinar arcu vulputate commodo, malesuada mattis conubia hendrerit mus praesent ullamcorper turpis. Leo dictumst et tempor auctor enim mauris cras senectus, platea nostra ullamcorper taciti sem risus at. Senectus sagittis elementum libero mauris malesuada molestie posuere pretium faucibus, fringilla varius ornare leo dignissim blandit curae congue euismod dictum, netus sem suscipit cursus ultrices nascetur dis tortor. Habitasse mattis feugiat tortor porttitor fermentum sem commodo, ut sociis duis vehicula neque est massa, consequat et pharetra libero molestie habitant.\\n\\t\\tLorem ipsum dolor sit amet consectetur adipiscing elit donec lacinia, quis fames platea aenean congue ultrices pulvinar arcu vulputate commodo, malesuada mattis conubia hendrerit mus praesent ullamcorper turpis. Leo dictumst et tempor auctor enim mauris cras senectus, platea nostra ullamcorper taciti sem risus at. Senectus sagittis elementum libero mauris malesuada molestie posuere pretium faucibus, fringilla varius ornare leo dignissim blandit curae congue euismod dictum, netus sem suscipit cursus ultrices nascetur dis tortor. Habitasse mattis feugiat tortor porttitor fermentum sem commodo, ut sociis duis vehicula neque est massa, consequat et pharetra libero molestie habitant.\\n\\t</p>\\n</article>\\n\"","export default \"<div class=\\\"container\\\">\\n\\t<h2>CONTACTO</h2>\\n\\t<div class=\\\"image\\\">\\n\\t\\t<!-- Mostramos la imagen también si existe -->\\n\\t\\t<img src=\\\"{{url+'../../assets/img/contacto.jpg'}}\\\"/>\\n\\t</div>\\t\\n\\n\\t<div>\\n\\t\\t<h2></h2>\\n\\t\\t<div id=\\\"contactInfo\\\">\\n\\t\\t\\t<h1>Sergio Carrasco</h1>\\n\\t\\t\\t<h2>Desarrollador Web Full Stack</h2>\\n\\t\\t\\t<p>Teléfono: +34 600000000</p>\\n\\t\\t\\t<p>Email: sergio@sergio.com</p>\\n\\t\\t\\t<p>Website: www.sergiowebejemplo.com</p>\\n\\t\\t</div>\\n\\t</div>\\n</div>\\n\\n\"","export default \"<div class=\\\"container\\\">\\n\\t<h2>{{title}}</h2>\\n\\t\\n\\t<form #projectForm=\\\"ngForm\\\" (ngSubmit)=\\\"onSubmit(projectForm)\\\">\\n\\t\\t<p>\\n\\t\\t\\t<label for=\\\"name\\\">Nombre</label>\\n\\t\\t\\t<input type=\\\"text\\\" name=\\\"name\\\" #name=\\\"ngModel\\\" [(ngModel)]=\\\"project.name\\\" required />\\n\\t\\t\\t<span class=\\\"formError\\\" *ngIf=\\\"name.touched && !name.valid\\\">\\n\\t\\t\\t\\tEl nombre es obligatorio.\\n\\t\\t\\t</span>\\n\\t\\t</p>\\n\\t\\t<p>\\n\\t\\t\\t<label for=\\\"description\\\">Descripción</label>\\n\\t\\t\\t<textarea name=\\\"description\\\" #description=\\\"ngModel\\\" [(ngModel)]=\\\"project.description\\\" required></textarea>  \\n\\t\\t\\t<span class=\\\"formError\\\" *ngIf=\\\"description.touched && !description.valid\\\">\\n\\t\\t\\t\\tLa descripción es obligatoria.\\n\\t\\t\\t</span>\\n\\t\\t</p>\\n\\t\\t<p>\\n\\t\\t\\t<label for=\\\"category\\\">Categoría</label>\\n\\t\\t\\t<input type=\\\"text\\\" name=\\\"category\\\" #category=\\\"ngModel\\\" [(ngModel)]=\\\"project.category\\\" required />\\n\\t\\t\\t<span class=\\\"formError\\\" *ngIf=\\\"category.touched && !category.valid\\\">\\n\\t\\t\\t\\tLa categoría es obligatoria.\\n\\t\\t\\t</span>\\n\\t\\t</p>\\n\\t\\t<p>\\n\\t\\t\\t<label for=\\\"year\\\">Año de creación</label>\\n\\t\\t\\t<input type=\\\"text\\\" name=\\\"year\\\" #year=\\\"ngModel\\\" [(ngModel)]=\\\"project.year\\\" required />\\n\\t\\t\\t<span class=\\\"formError\\\" *ngIf=\\\"year.touched && !year.valid\\\">\\n\\t\\t\\t\\tEl año es obligatorio\\n\\t\\t\\t</span>\\n\\t\\t</p>\\n\\t\\t<p>\\n\\t\\t\\t<label for=\\\"langs\\\">Lenguajes utilizados</label>\\n\\t\\t\\t<input type=\\\"text\\\" name=\\\"langs\\\" #langs=\\\"ngModel\\\" [(ngModel)]=\\\"project.langs\\\" required />\\n\\t\\t\\t<span class=\\\"formError\\\" *ngIf=\\\"langs.touched && !langs.valid\\\">\\n\\t\\t\\t\\tDetallar los lenguajes utilizados es obligatorio.\\n\\t\\t\\t</span>\\n\\t\\t</p>\\n\\t\\t<p>\\n\\t\\t\\t<label for=\\\"image\\\">Imagen del proyecto</label>\\n\\t\\t\\t<!-- En el input de la imagen lanzamos el evento (change) de angular que salta cuando hacemos algún cambio en un input y llama a otro método que tengamos en nuestro componente. En la variable $event tendremos todos los datos que haya capturado ese input. -->\\n\\t\\t\\t<input type=\\\"file\\\" name=\\\"image\\\" placeholder=\\\"Subir imagen\\\" (change)=\\\"fileChangeEvent($event)\\\" />\\n\\t\\t</p>\\n\\t\\t<input type=\\\"submit\\\" value=\\\"Enviar\\\" [disabled]=\\\"!projectForm.form.valid\\\" />\\n\\t</form>\\n\\n\\t<!-- Div para mostrar si el guardado de datos ha sido satisfactirio -->\\n\\t<div class=\\\"message success\\\" *ngIf=\\\"status == 'success'\\\">\\n\\t\\tEl proyecto se ha creado correctamente, puedes verlo <a [routerLink]=\\\"['/proyecto/', saveProject._id]\\\">aquí</a>.\\n\\t</div>\\n\\t<!-- Div para mostrar si ha habido un error al crear el proyecto -->\\n\\t<div class=\\\"message failed\\\" *ngIf=\\\"status == 'failed'\\\">\\n\\t\\tHa ocurrido un error al crear el proyecto.\\n\\t</div>\\n\\n</div>\\n\"","export default \"<!-- Cargamos la información si project existe, ya que cómo javascript carga antes que Ajax-->\\n<div class=\\\"container\\\" *ngIf=\\\"project\\\">\\n\\t\\n\\t<div class=\\\"projectDetail\\\" *ngIf=\\\"project\\\">\\n\\t\\t<!-- Cargamos la imagen si project existe, ya que cómo javascript carga antes que Ajax-->\\n\\t\\t<div class=\\\"image\\\" *ngIf=\\\"project.image\\\">\\n\\t\\t\\t<!-- Mostramos la imagen también si existe -->\\n\\t\\t\\t<img src=\\\"{{url+'/get-image/'+project.image}}\\\" *ngIf=\\\"project.image\\\" />\\n\\t\\t</div>\\n\\t\\t<div class=\\\"data\\\">\\n\\t\\t\\t<h1>{{ project.name }}</h1>\\n\\t\\t\\t<h4>{{ project.description }}</h4>\\n\\t\\t\\t<p>{{ project.category }}</p>\\n\\t\\t\\t<p>{{ project.langs }}</p>\\n\\t\\t\\t<!-- Si confirm es false -->\\n\\t\\t\\t<p *ngIf=\\\"confirm == false\\\">\\n\\t\\t\\t\\t<a [routerLink]=\\\"['/editar-proyecto', project._id]\\\" class=\\\"button_edit\\\">Editar</a>\\n\\t\\t\\t\\t<a (click)=\\\"setConfirm(true)\\\" class=\\\"button_delete\\\">Borrar</a>\\n\\t\\t\\t</p>\\n\\t\\t\\t<!-- Si confirm es true -->\\n\\t\\t\\t<p *ngIf=\\\"confirm == true\\\">\\n\\t\\t\\t\\t<span class=\\\"confirm\\\">¿Estás seguro de eliminar este proyecto?</span> <br/>\\n\\t\\t\\t\\t<a (click)=\\\"setConfirm(false)\\\" class=\\\"button_edit\\\">Cancelar</a>\\n\\t\\t\\t\\t<!-- Llama al método deleteProject del componente-->\\n\\t\\t\\t\\t<a (click)=\\\"deleteProject(project._id)\\\" class=\\\"button_confirm\\\">Eliminar definitivamente</a>\\n\\t\\t\\t</p>\\n\\t\\t</div>\\n\\t</div>\\n</div>\\n\\n\"","export default \"<!-- Necesitamos poner un ngIf para que no de error en el componente edit-project porque intente cargar los datos antes que se haya cargado el objeto project. Esto es porque al cargar el componente en el método(ngOnInit) llamamos al método getProject para cargar los datos del proyecto a editar, y cómo javascrit carga antes que Ajax tenemos que poner el ngIf=\\\"project\\\" para que solo lo cargue si el objeto project ya contiene algo. -->\\n<div class=\\\"container\\\" *ngIf=\\\"project\\\">\\n    <h2>{{title}}</h2>\\n\\n    <form #projectForm=\\\"ngForm\\\" (ngSubmit)=\\\"onSubmit()\\\">\\n        <p>\\n            <label for=\\\"name\\\">Nombre</label>\\n            <input type=\\\"text\\\" name=\\\"name\\\" #name=\\\"ngModel\\\" [(ngModel)]=\\\"project.name\\\" required />\\n            <span class=\\\"formError\\\" *ngIf=\\\"name.touched && !name.valid\\\">\\n\\t\\t\\t\\tEl nombre es obligatorio.\\n\\t\\t\\t</span>\\n        </p>\\n        <p>\\n            <label for=\\\"description\\\">Descripción</label>\\n            <textarea name=\\\"description\\\" #description=\\\"ngModel\\\" [(ngModel)]=\\\"project.description\\\" required></textarea>\\n            <span class=\\\"formError\\\" *ngIf=\\\"description.touched && !description.valid\\\">\\n\\t\\t\\t\\tLa descripción es obligatoria.\\n\\t\\t\\t</span>\\n        </p>\\n        <p>\\n            <label for=\\\"category\\\">Categoría</label>\\n            <input type=\\\"text\\\" name=\\\"category\\\" #category=\\\"ngModel\\\" [(ngModel)]=\\\"project.category\\\" required />\\n            <span class=\\\"formError\\\" *ngIf=\\\"category.touched && !category.valid\\\">\\n\\t\\t\\t\\tLa categoría es obligatoria.\\n\\t\\t\\t</span>\\n        </p>\\n        <p>\\n            <label for=\\\"year\\\">Año de creación</label>\\n            <input type=\\\"text\\\" name=\\\"year\\\" #year=\\\"ngModel\\\" [(ngModel)]=\\\"project.year\\\" required />\\n            <span class=\\\"formError\\\" *ngIf=\\\"year.touched && !year.valid\\\">\\n\\t\\t\\t\\tEl año es obligatorio\\n\\t\\t\\t</span>\\n        </p>\\n        <p>\\n            <label for=\\\"langs\\\">Lenguajes utilizados</label>\\n            <input type=\\\"text\\\" name=\\\"langs\\\" #langs=\\\"ngModel\\\" [(ngModel)]=\\\"project.langs\\\" required />\\n            <span class=\\\"formError\\\" *ngIf=\\\"langs.touched && !langs.valid\\\">\\n\\t\\t\\t\\tDetallar los lenguajes utilizados es obligatorio.\\n\\t\\t\\t</span>\\n        </p>\\n        <p>\\n            <label for=\\\"image\\\">Imagen del proyecto</label>\\n            <!-- Cargamos la imagen si project existe, ya que javascript carga antes que Ajax-->\\n            <span class=\\\"image\\\" *ngIf=\\\"project.image\\\">\\n\\t\\t\\t\\t<!-- Mostramos la imagen también si existe -->\\n\\t\\t\\t\\t<img src=\\\"{{url+'/get-image/'+project.image}}\\\" width=\\\"100px\\\" />\\n\\t\\t\\t</span>\\n            <br/>\\n            <!-- En el input de la imagen lanzamos el evento (change) de angular llamamos al método fileChangeEvent pasándole lo que contiene el input con la variable $event -->\\n            <input type=\\\"file\\\" name=\\\"image\\\" placeholder=\\\"Subir imagen\\\" (change)=\\\"fileChangeEvent($event)\\\" />\\n        </p>\\n        <input type=\\\"submit\\\" value=\\\"Enviar\\\" [disabled]=\\\"!projectForm.form.valid\\\" />\\n    </form>\\n\\n    <!-- Div para mostrar si la actualización ha sido satisfactoria -->\\n    <div class=\\\"message success\\\" *ngIf=\\\"status == 'success'\\\">\\n        El proyecto se ha actualizado correctamente, puedes verlo <a [routerLink]=\\\"['/proyecto/', saveProject]\\\">aquí</a>.\\n    </div>\\n    <!-- Div para mostrar si ha habido un error al actualizar el proyecto -->\\n    <div class=\\\"message failed\\\" *ngIf=\\\"status == 'failed'\\\">\\n        Ha ocurrido un error al actualizar el proyecto.\\n    </div>\\n</div>\"","export default \"<p>error works!</p>\\n\"","export default \"<!-- Listamos los proyectos obtenidos en el componente -->\\n<div class=\\\"container\\\">\\n\\t<h2>Proyectos</h2>\\n\\n\\t<ul>\\n\\t\\t<!-- Recorremos los proyectos obtenidos para mostrarlos. Y además le aplicamos la pipe paginate del componente ngx-pagination instalado en el proyecto. Podemos cambiar el número de proyectos por página cambiando el valor de itemsPerPage -->\\n\\t\\t<li *ngFor=\\\"let project of projects | paginate: {itemsPerPage: 6, currentPage: actualPage}\\\" class=\\\"project\\\">\\n\\t\\t\\t<!-- Hacemos que todo sea un enlace al componente 'project-detail' pasándole el id del proyecto y que nos mostrará toda la información del proyecto -->\\n\\t\\t\\t<a [routerLink]=\\\"['/proyecto', project._id]\\\">\\n\\t\\t\\t\\t<!-- Metemos la imagen en un div para crear una máscara(class image), así conseguiremos que todo lo que sobresalga del div lo recorte -->\\n\\t\\t\\t\\t<div class=\\\"image\\\">\\n\\t\\t\\t\\t\\t<!-- Mostramos la imagen también si existe -->\\n\\t\\t\\t\\t\\t<img src=\\\"{{url+'/get-image/'+project.image}}\\\" *ngIf=\\\"project.image\\\" />\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t<h3>{{project.name}}</h3>\\n\\t\\t\\t\\t<p>{{project.category}}</p>\\n\\t\\t\\t</a>\\n\\t\\t</li>\\n\\t</ul>\\n\\t<!-- Div para incluir el componente de paginación ngx-pagination -->\\n\\t<div class=\\\"pagination\\\">\\t\\n\\t\\t<pagination-controls (pageChange)=\\\"actualPage = $event\\\"></pagination-controls>\\n\\t</div>\\t\\n</div>\\n\"","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n//Importamos nuestros componentes\nimport { AboutComponent } from './components/about/about.component';\nimport { ProjectsComponent } from './components/projects/projects.component';\nimport { CreateProjectComponent } from './components/create-project/create-project.component';\nimport { ContactComponent } from './components/contact/contact.component';\nimport { ErrorComponent } from './components/error/error.component';\nimport { DetailProjectComponent } from './components/detail-project/detail-project.component';\nimport { EditProjectComponent } from './components/edit-project/edit-project.component';\n\nconst routes: Routes = [\n\t{path: '', component: AboutComponent},\n\t{path: 'sobre-mi', component: AboutComponent},\n\t{path: 'proyectos', component: ProjectsComponent},\n\t{path: 'crear-proyecto', component: CreateProjectComponent},\n\t{path: 'contacto', component: ContactComponent},\n\t{path: 'proyecto/:id', component: DetailProjectComponent},\n\t{path: 'editar-proyecto/:id', component: EditProjectComponent},\n\t{path: '**', component: ErrorComponent}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'portafolio-angular-frontend';\n}\n","//Módulos necesarios\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n//Necesario para poder hacer peticiones Ajax\nimport { HttpClientModule} from '@angular/common/http';\n//Necesario para usar Two data binding y formularios\nimport { FormsModule } from '@angular/forms';\n//Configuración de rutas\nimport { AppRoutingModule } from './app-routing.module';\n\n//Componentes aplicación\nimport { AppComponent } from './app.component';\nimport { AboutComponent } from './components/about/about.component';\nimport { ProjectsComponent } from './components/projects/projects.component';\nimport { CreateProjectComponent } from './components/create-project/create-project.component';\nimport { ContactComponent } from './components/contact/contact.component';\nimport { ErrorComponent } from './components/error/error.component';\nimport { DetailProjectComponent } from './components/detail-project/detail-project.component';\nimport { EditProjectComponent } from './components/edit-project/edit-project.component';\n//Componente ngx-pagination\nimport { NgxPaginationModule } from 'ngx-pagination';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    AboutComponent,\n    ProjectsComponent,\n    CreateProjectComponent,\n    ContactComponent,\n    ErrorComponent,\n    DetailProjectComponent,\n    EditProjectComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    FormsModule,\n    NgxPaginationModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","export default \"#title{\\n\\twidth: 70%;\\n\\tmargin: 0px auto;\\n\\ttext-align: center;\\n\\tmargin-bottom: 70px;\\n\\tmargin-top: 20px;\\n}\\n\\n/* Encabezado h1 del título*/\\n\\n#title h1{\\n\\t/* Fuente importada en styles.css */\\n\\tfont-family: \\\"finger\\\";\\n\\tfont-size: 60px;\\n\\tborder-bottom: 1px solid #ccc;\\n\\tpadding-bottom: 5px;\\n}\\n\\n/* Encabezado h2 del título (subtitle) */\\n\\n#title h2{\\n\\tfont-size: 25px;\\n\\tcolor: gray;\\n\\tmargin-top: 5px;\\n\\tmargin-bottom: 5px;\\n}\\n\\n/* Contenido de about (etiqueta article con clase about) */\\n\\narticle.about{\\n\\twidth: 70%;\\n\\tmargin: 0px auto;\\n\\tmargin-bottom: 0px;\\n\\tpadding-bottom: 15px;\\n\\tfont-size: 23px;\\n}\\n\\n/* Título Sobre mí */\\n\\n.about h2{\\n\\tborder-bottom: 1px solid #ccc;\\n\\tpadding-bottom: 5px;\\n\\tmargin-bottom: 5px;\\n}\\n\\n/* Párrafo de Sobre mí */\\n\\n.about p{\\n\\tpadding-top: 20px;\\n\\ttext-align: justify;\\n}\\n\\n\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9hYm91dC9hYm91dC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0NBQ0MsVUFBVTtDQUNWLGdCQUFnQjtDQUNoQixrQkFBa0I7Q0FDbEIsbUJBQW1CO0NBQ25CLGdCQUFnQjtBQUNqQjs7QUFFQSw0QkFBNEI7O0FBQzVCO0NBQ0MsbUNBQW1DO0NBQ25DLHFCQUFxQjtDQUNyQixlQUFlO0NBQ2YsNkJBQTZCO0NBQzdCLG1CQUFtQjtBQUNwQjs7QUFFQSx3Q0FBd0M7O0FBQ3hDO0NBQ0MsZUFBZTtDQUNmLFdBQVc7Q0FDWCxlQUFlO0NBQ2Ysa0JBQWtCO0FBQ25COztBQUVBLDBEQUEwRDs7QUFDMUQ7Q0FDQyxVQUFVO0NBQ1YsZ0JBQWdCO0NBQ2hCLGtCQUFrQjtDQUNsQixvQkFBb0I7Q0FDcEIsZUFBZTtBQUNoQjs7QUFFQSxvQkFBb0I7O0FBQ3BCO0NBQ0MsNkJBQTZCO0NBQzdCLG1CQUFtQjtDQUNuQixrQkFBa0I7QUFDbkI7O0FBRUEsd0JBQXdCOztBQUN4QjtDQUNDLGlCQUFpQjtDQUNqQixtQkFBbUI7QUFDcEIiLCJmaWxlIjoic3JjL2FwcC9jb21wb25lbnRzL2Fib3V0L2Fib3V0LmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIjdGl0bGV7XG5cdHdpZHRoOiA3MCU7XG5cdG1hcmdpbjogMHB4IGF1dG87XG5cdHRleHQtYWxpZ246IGNlbnRlcjtcblx0bWFyZ2luLWJvdHRvbTogNzBweDtcblx0bWFyZ2luLXRvcDogMjBweDtcbn1cblxuLyogRW5jYWJlemFkbyBoMSBkZWwgdMOtdHVsbyovXG4jdGl0bGUgaDF7XG5cdC8qIEZ1ZW50ZSBpbXBvcnRhZGEgZW4gc3R5bGVzLmNzcyAqL1xuXHRmb250LWZhbWlseTogXCJmaW5nZXJcIjtcblx0Zm9udC1zaXplOiA2MHB4O1xuXHRib3JkZXItYm90dG9tOiAxcHggc29saWQgI2NjYztcblx0cGFkZGluZy1ib3R0b206IDVweDtcbn1cblxuLyogRW5jYWJlemFkbyBoMiBkZWwgdMOtdHVsbyAoc3VidGl0bGUpICovXG4jdGl0bGUgaDJ7XG5cdGZvbnQtc2l6ZTogMjVweDtcblx0Y29sb3I6IGdyYXk7XG5cdG1hcmdpbi10b3A6IDVweDtcblx0bWFyZ2luLWJvdHRvbTogNXB4O1xufVxuXG4vKiBDb250ZW5pZG8gZGUgYWJvdXQgKGV0aXF1ZXRhIGFydGljbGUgY29uIGNsYXNlIGFib3V0KSAqL1xuYXJ0aWNsZS5hYm91dHtcblx0d2lkdGg6IDcwJTtcblx0bWFyZ2luOiAwcHggYXV0bztcblx0bWFyZ2luLWJvdHRvbTogMHB4O1xuXHRwYWRkaW5nLWJvdHRvbTogMTVweDtcblx0Zm9udC1zaXplOiAyM3B4O1xufVxuXG4vKiBUw610dWxvIFNvYnJlIG3DrSAqL1xuLmFib3V0IGgye1xuXHRib3JkZXItYm90dG9tOiAxcHggc29saWQgI2NjYztcblx0cGFkZGluZy1ib3R0b206IDVweDtcblx0bWFyZ2luLWJvdHRvbTogNXB4O1xufVxuXG4vKiBQw6FycmFmbyBkZSBTb2JyZSBtw60gKi9cbi5hYm91dCBwe1xuXHRwYWRkaW5nLXRvcDogMjBweDtcblx0dGV4dC1hbGlnbjoganVzdGlmeTtcbn1cblxuXG4iXX0= */\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-about',\n  templateUrl: './about.component.html',\n  styleUrls: ['./about.component.css']\n})\nexport class AboutComponent implements OnInit {\n\n\tpublic title: string;\n\tpublic subtitle: string;\n\tpublic email: string;\n  \t\n  \tconstructor() { \n\t\tthis.title = \"Sergio Carrasco\";\n\t  \tthis.subtitle = \"Desarrollador Web\";\n\t  \tthis.email = \"chechucarrasco@gmail.com\";\n  \t}\n\n  \tngOnInit() {\n  \t}\n\n}\n","export default \".image{\\n\\twidth: 100%;\\n\\theight: 100%;\\n\\toverflow: hidden;\\n}\\n\\n#contactInfo{\\n\\twidth: 100%;\\n\\tmargin: 0px auto;\\n\\t\\n\\tmargin-bottom: 70px;\\n\\tmargin-top: 40px;\\n}\\n\\n/* Encabezado h1 del título*/\\n\\n#contactInfo h1{\\n\\t/* Fuente importada en styles.css */\\n\\tfont-family: \\\"finger\\\";\\n\\tfont-size: 30px;\\n\\n\\tpadding-bottom: 5px;\\n}\\n\\n/* Encabezado h2 del título (subtitle) */\\n\\n#contactInfo h2{\\n\\tfont-size: 25px;\\n\\tcolor: gray;\\n\\tmargin-top: 5px;\\n\\tmargin-bottom: 5px;\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9jb250YWN0L2NvbnRhY3QuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtDQUNDLFdBQVc7Q0FDWCxZQUFZO0NBQ1osZ0JBQWdCO0FBQ2pCOztBQUVBO0NBQ0MsV0FBVztDQUNYLGdCQUFnQjs7Q0FFaEIsbUJBQW1CO0NBQ25CLGdCQUFnQjtBQUNqQjs7QUFFQSw0QkFBNEI7O0FBQzVCO0NBQ0MsbUNBQW1DO0NBQ25DLHFCQUFxQjtDQUNyQixlQUFlOztDQUVmLG1CQUFtQjtBQUNwQjs7QUFFQSx3Q0FBd0M7O0FBQ3hDO0NBQ0MsZUFBZTtDQUNmLFdBQVc7Q0FDWCxlQUFlO0NBQ2Ysa0JBQWtCO0FBQ25CIiwiZmlsZSI6InNyYy9hcHAvY29tcG9uZW50cy9jb250YWN0L2NvbnRhY3QuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5pbWFnZXtcblx0d2lkdGg6IDEwMCU7XG5cdGhlaWdodDogMTAwJTtcblx0b3ZlcmZsb3c6IGhpZGRlbjtcbn1cblxuI2NvbnRhY3RJbmZve1xuXHR3aWR0aDogMTAwJTtcblx0bWFyZ2luOiAwcHggYXV0bztcblx0XG5cdG1hcmdpbi1ib3R0b206IDcwcHg7XG5cdG1hcmdpbi10b3A6IDQwcHg7XG59XG5cbi8qIEVuY2FiZXphZG8gaDEgZGVsIHTDrXR1bG8qL1xuI2NvbnRhY3RJbmZvIGgxe1xuXHQvKiBGdWVudGUgaW1wb3J0YWRhIGVuIHN0eWxlcy5jc3MgKi9cblx0Zm9udC1mYW1pbHk6IFwiZmluZ2VyXCI7XG5cdGZvbnQtc2l6ZTogMzBweDtcblxuXHRwYWRkaW5nLWJvdHRvbTogNXB4O1xufVxuXG4vKiBFbmNhYmV6YWRvIGgyIGRlbCB0w610dWxvIChzdWJ0aXRsZSkgKi9cbiNjb250YWN0SW5mbyBoMntcblx0Zm9udC1zaXplOiAyNXB4O1xuXHRjb2xvcjogZ3JheTtcblx0bWFyZ2luLXRvcDogNXB4O1xuXHRtYXJnaW4tYm90dG9tOiA1cHg7XG59XG4iXX0= */\"","import { Component, OnInit } from '@angular/core';\n//Modelo del componente\nimport { Project } from '../../models/project';\n//Servicio del componente\nimport { ProjectService } from '../../services/project.service';\n//Archivo de configuracion global\nimport { Global } from '../../services/global';\n\n@Component({\n  selector: 'app-contact',\n  templateUrl: './contact.component.html',\n  styleUrls: ['./contact.component.css']\n})\nexport class ContactComponent implements OnInit {\n\n  public url: string;\n\n  constructor(\n    private _projectService: ProjectService\n  ) { \n    this.url = Global.url;\n  }\n\n  ngOnInit() {\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvY3JlYXRlLXByb2plY3QvY3JlYXRlLXByb2plY3QuY29tcG9uZW50LmNzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\n//Modelo del componente\nimport { Project } from '../../models/project';\n//Servicio del componente\nimport { ProjectService } from '../../services/project.service';\n//Servicio encargado de subir archivos\nimport { UploadService } from '../../services/upload.service';\n//Archivo de configuracion global\nimport { Global } from '../../services/global';\n\n\n@Component({\n  selector: 'app-create-project',\n  templateUrl: './create-project.component.html',\n  styleUrls: ['./create-project.component.css'],\n  //Cargamos servicio del componente\n  providers: [ProjectService, UploadService]\n})\nexport class CreateProjectComponent implements OnInit {\n\n\tpublic title: string;\n\t//Propiedad de tipo Project para el nuevo proyecto\n\tpublic project: Project;\n\t//Para controlar si todo ha ido bien\n\tpublic status: string;\n\tpublic year: Date;\n\t//Recoge los archivos a subir que se recibe del formulario\n\tpublic filesToUpload: Array<File>;\n\t//La usaremos para guardar el id del proyecto guardado y usarlo en la vista para crear el enlace que\n\t//lo muestra en detalle\n\tpublic saveProject: Project;\n\t\n\tconstructor(\n\t\t//Creamos las propiedades del Servicio\n\t\tprivate _projectService: ProjectService,\n\t\tprivate _uploadService: UploadService\n\t){\n\t\t//Inicializamos las propiedades\n\t\tthis.title = \"Crear nuevo proyecto\";\n\t\tthis.year = new Date();\n\t\t//Creamos una instancia de objeto Project (modelo componente)\n\t\tthis.project = new Project('','','','',this.year.getFullYear(),'','');\n\t\tthis.status = \"\";\n\t }\n\n\tngOnInit() {\n\t}\n\n\t//método para recoger los datos del formulario del componente y llamar al método que guarda los datos\n\t//en la base de datos\n\tonSubmit(form){\n\t\t\n\t\t/*Llamamos al método creado en nuestro servicio, que realiza la petición POST, y además lo \n\t\tsuscribimos a un Observable para controlar la respuesta o error que devuelve */\n\t\t//Guardar datos básicos\n\t\tthis._projectService.saveProject(this.project).subscribe(\n\t\t\tresponse => {\n\t\t\t\tconsole.log(response);\n\t\t\t\t//Si nos llega una respuesta satisfactoria\n\t\t\t\tif(response.project){\n\t\t\t\t\t/*Si los datos se han guardado correctamente, subimos las imágenes*/\n\t\t\t\t\t//Subir la imagen o imágenes seleccionadas\n\t\t\t\t\t/* 1º parámetro es la url del método de nuestro backend('/upload-image'),en response.project._id tenemos \n\t\t\t\t\t   el id del proyecto creado. 2º parámetro lo dejamos vacío porque es opcional. 3º parámetro son los archivos\n\t\t\t\t\t   a subir. Y el último parámetro es el nombre del campo que va a recibir el backend(Lo tenemos en el archivo\n\t\t\t\t\t   backend/controller/project.js y el método uploadImage) y vemos que el nombre del campo es 'image'\n\t\t\t\t\t*/\n\t\t\t\t\t//Además sólo lo hacemos si filesToUpload tiene algo\n\t\t\t\t\tif(this.filesToUpload){\t\n\t\t\t\t\t\tthis._uploadService.makeFileRequest(Global.url+\"/upload-image/\"+response.project._id, [], this.filesToUpload, 'image')\n\t\t\t\t\t\t.then((result:any) => {\n\t\t\t\t\t\t\t//Guardamos proyecto guardado para crear el enlace en la vista con su id\n\t\t\t\t\t\t\tthis.saveProject = result.project;\n\t\t\t\t\t\t\tthis.status = 'success';\n\t\t\t\t\t\t\tform.reset();\n\t\t\t\t\t\t\tconsole.log(\"Resultado petición ajax subir imágenes proyecto\", result);\n\t\t\t\t\t\t});\n\t\t\t\t\t//Si no hay archivos para subir en filesToUpload también guardamos el enlace\n\t\t\t\t\t}else{\n\t\t\t\t\t\t//Guardamos proyecto guardado para crear el enlace en la vista con su id\n\t\t\t\t\t\tthis.saveProject = response.project;\n\t\t\t\t\t\tthis.status = 'success';\n\t\t\t\t\t\tform.reset();\n\t\t\t\t\t\tconsole.log(\"Resultado petición ajax subir imágenes proyecto\", response);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\t\t\terror => {\n\t\t\t\tconsole.log(<any>error);\n\t\t\t\tthis.status = 'failed';\n\t\t\t}\n\t\t);\n\t}\n\n\t//método que recoge los archivos seleccionados en el input de subir imágenes y que invocamos desde else\n\t//formulario cada vez que salta el evento (change) del input.\n\tfileChangeEvent(fileInput: any) {\n\t\t//forzamos a que filesToUpload sea un Array de tipo File que es otro array, esto se llama Castear.\n\t\t//Y le asignamos los archivos que se han seleccionado en el input y que estamos recibiendo como parámetro\n\t\t//con fileInput. Para ver todo el objeto y lo que guarda podemo hacer un cosole.log(fileInput).\n\t\tthis.filesToUpload = <Array<File>>fileInput.target.files;\n\t}\n\n}\n","export default \"/* Estilos página detalle del proyecto (Componente project-detail) */\\n\\n/* Flotamos a la izquierda la imagen del detalle del proyecto de la página project-detail, y le damos\\nun width dentro del contenedor del 47% y a los datos que mostramos(.data). Así dividimos el contenedor\\npara la imagen y para los datos */\\n\\n.container .projectDetail .image{\\n\\tfloat: left;\\n\\twidth: 47%;\\n}\\n\\n.container .projectDetail .image img{\\n\\t/* A la imagen le damos el 100% del 47% del contenedor */\\n\\twidth: 100%;\\n}\\n\\n.container .projectDetail .data{\\n\\tfloat: left;\\n\\twidth: 47%;\\n\\tmargin-left: 20px;\\n}\\n\\n/* Botones editar y borrar de la pagína detalle proyecto (Componente project-detail) */\\n\\n.button_edit, .button_delete, .button_confirm{\\n\\tdisplay: block;\\n\\tfont-size: 17px;\\n\\tpadding: 5px;\\n\\tmargin-top: 15px;\\n\\tcolor: white;\\n\\tborder: 1px solid rgba(13, 67, 133, 1);\\n\\tcursor: pointer;\\n\\twidth: 35%;\\n\\tfloat: left;\\n\\tmargin-right: 10px;\\n\\ttext-align: center;\\n\\ttext-decoration: none;\\n}\\n\\n.button_edit{\\n\\tbackground: #e2d40a;\\n}\\n\\n.button_delete{\\n\\tbackground: #f02929;\\n}\\n\\n.button_confirm{\\n\\tbackground: #f02929;\\n\\twidth: auto;\\n}\\n\\n.confirm{\\n\\tdisplay: block;\\n\\tfont-weight: bold;\\n\\tmargin-top: 15px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9kZXRhaWwtcHJvamVjdC9kZXRhaWwtcHJvamVjdC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLG9FQUFvRTs7QUFFcEU7O2lDQUVpQzs7QUFDakM7Q0FDQyxXQUFXO0NBQ1gsVUFBVTtBQUNYOztBQUVBO0NBQ0Msd0RBQXdEO0NBQ3hELFdBQVc7QUFDWjs7QUFFQTtDQUNDLFdBQVc7Q0FDWCxVQUFVO0NBQ1YsaUJBQWlCO0FBQ2xCOztBQUNBLHNGQUFzRjs7QUFDdEY7Q0FDQyxjQUFjO0NBQ2QsZUFBZTtDQUNmLFlBQVk7Q0FDWixnQkFBZ0I7Q0FDaEIsWUFBWTtDQUNaLHNDQUFzQztDQUN0QyxlQUFlO0NBQ2YsVUFBVTtDQUNWLFdBQVc7Q0FDWCxrQkFBa0I7Q0FDbEIsa0JBQWtCO0NBQ2xCLHFCQUFxQjtBQUN0Qjs7QUFFQTtDQUNDLG1CQUFtQjtBQUNwQjs7QUFFQTtDQUNDLG1CQUFtQjtBQUNwQjs7QUFFQTtDQUNDLG1CQUFtQjtDQUNuQixXQUFXO0FBQ1o7O0FBRUE7Q0FDQyxjQUFjO0NBQ2QsaUJBQWlCO0NBQ2pCLGdCQUFnQjtBQUNqQiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvZGV0YWlsLXByb2plY3QvZGV0YWlsLXByb2plY3QuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi8qIEVzdGlsb3MgcMOhZ2luYSBkZXRhbGxlIGRlbCBwcm95ZWN0byAoQ29tcG9uZW50ZSBwcm9qZWN0LWRldGFpbCkgKi9cblxuLyogRmxvdGFtb3MgYSBsYSBpenF1aWVyZGEgbGEgaW1hZ2VuIGRlbCBkZXRhbGxlIGRlbCBwcm95ZWN0byBkZSBsYSBww6FnaW5hIHByb2plY3QtZGV0YWlsLCB5IGxlIGRhbW9zXG51biB3aWR0aCBkZW50cm8gZGVsIGNvbnRlbmVkb3IgZGVsIDQ3JSB5IGEgbG9zIGRhdG9zIHF1ZSBtb3N0cmFtb3MoLmRhdGEpLiBBc8OtIGRpdmlkaW1vcyBlbCBjb250ZW5lZG9yXG5wYXJhIGxhIGltYWdlbiB5IHBhcmEgbG9zIGRhdG9zICovXG4uY29udGFpbmVyIC5wcm9qZWN0RGV0YWlsIC5pbWFnZXtcblx0ZmxvYXQ6IGxlZnQ7XG5cdHdpZHRoOiA0NyU7XG59XG5cbi5jb250YWluZXIgLnByb2plY3REZXRhaWwgLmltYWdlIGltZ3tcblx0LyogQSBsYSBpbWFnZW4gbGUgZGFtb3MgZWwgMTAwJSBkZWwgNDclIGRlbCBjb250ZW5lZG9yICovXG5cdHdpZHRoOiAxMDAlO1xufVxuXG4uY29udGFpbmVyIC5wcm9qZWN0RGV0YWlsIC5kYXRhe1xuXHRmbG9hdDogbGVmdDtcblx0d2lkdGg6IDQ3JTtcblx0bWFyZ2luLWxlZnQ6IDIwcHg7XG59XG4vKiBCb3RvbmVzIGVkaXRhciB5IGJvcnJhciBkZSBsYSBwYWfDrW5hIGRldGFsbGUgcHJveWVjdG8gKENvbXBvbmVudGUgcHJvamVjdC1kZXRhaWwpICovXG4uYnV0dG9uX2VkaXQsIC5idXR0b25fZGVsZXRlLCAuYnV0dG9uX2NvbmZpcm17XG5cdGRpc3BsYXk6IGJsb2NrO1xuXHRmb250LXNpemU6IDE3cHg7XG5cdHBhZGRpbmc6IDVweDtcblx0bWFyZ2luLXRvcDogMTVweDtcblx0Y29sb3I6IHdoaXRlO1xuXHRib3JkZXI6IDFweCBzb2xpZCByZ2JhKDEzLCA2NywgMTMzLCAxKTtcblx0Y3Vyc29yOiBwb2ludGVyO1xuXHR3aWR0aDogMzUlO1xuXHRmbG9hdDogbGVmdDtcblx0bWFyZ2luLXJpZ2h0OiAxMHB4O1xuXHR0ZXh0LWFsaWduOiBjZW50ZXI7XG5cdHRleHQtZGVjb3JhdGlvbjogbm9uZTtcbn1cblxuLmJ1dHRvbl9lZGl0e1xuXHRiYWNrZ3JvdW5kOiAjZTJkNDBhO1xufVxuXG4uYnV0dG9uX2RlbGV0ZXtcblx0YmFja2dyb3VuZDogI2YwMjkyOTtcbn1cblxuLmJ1dHRvbl9jb25maXJte1xuXHRiYWNrZ3JvdW5kOiAjZjAyOTI5O1xuXHR3aWR0aDogYXV0bztcbn1cblxuLmNvbmZpcm17XG5cdGRpc3BsYXk6IGJsb2NrO1xuXHRmb250LXdlaWdodDogYm9sZDtcblx0bWFyZ2luLXRvcDogMTVweDtcbn0iXX0= */\"","import { Component, OnInit } from '@angular/core';\n//Modelo del componente\nimport { Project } from '../../models/project';\n//Servicio del componente\nimport { ProjectService } from '../../services/project.service';\n//Archivo de configuracion global\nimport { Global } from '../../services/global';\n//Módulos necesarios para poder acceder a los parámetros recibidos por URL\nimport { Router, ActivatedRoute, Params } from '@angular/router';\n\n@Component({\n  selector: 'app-detail-project',\n  templateUrl: './detail-project.component.html',\n  styleUrls: ['./detail-project.component.css'],\n  providers: [ProjectService]\n})\nexport class DetailProjectComponent implements OnInit {\n\n\t//propiedad para recoger la url de la api definida en Global\n\tpublic url: string;\n\t//Propiedad para recoger la información del proyecto obtenido para mostrarlo en la vista\n\tpublic project: Project;\n\t//Propiedad para pedir la confirmación en caso de querer borrar el proyecto\n\tpublic confirm: boolean;\n  \t\n  \tconstructor(\n  \t\t//Cargamos servicios necesarios en el constructor\n  \t\tprivate _projectService: ProjectService,\n  \t\tprivate _router: Router,\n  \t\tprivate _route: ActivatedRoute\n  \t){\n  \t\tthis.url = Global.url;\n\t\tthis.project = new Project(\"\",\"\",\"\",\"\", 0,\"\",\"\");\n\t\tthis.confirm = false;\n  \t }\n\n  \tngOnInit() {\n\n  \t\t//Al cargar el componente recogemos el parámetro que nos llega por la URL y llamamos al método \n\t\t//del componente getProject pasándole el parámetro recogido\n\t\tthis._route.params.subscribe(params => {\n\t\t\tlet id = params.id;\n\n\t\t\t//llámamos al método del componente pasandole ya el parámetro recogido\n\t\t\tthis.getProject(id);\n\t\t});\n  \t}\n\n  \t//Método que llama al método del servicio del componente que realiza la petición al backend para \n\t//obtener la información de un proyecto especifico\n\t/* Éste método recibe un parámetro (id del proyecto) que nos llega por la url y que recogemos en\n\t   el ngOnInit() \n\t*/\n\tgetProject(id) {\n\t\t//Ahora invocamos al método de nuestro servicio para obtener la información del proyecto con\n\t\t//el id recibido por parámetro\n\t\tthis._projectService.getProject(id).subscribe(\n\t\t\tresponse => {\n\t\t\t\t//Si todo ha ido bien recogemos el objeto con la información del proyecto para poder\n\t\t\t\t//mostrarla en la vista del componente\n\t\t\t\tthis.project = response.project;\n\t\t\t\t//console.log(\"Proyecto devuelto: \",response.project);\n\t\t\t},\n\t\t\terror => {\n\t\t\t\tconsole.log(<any>error);\n\t\t\t}\n\t\t);\n\t}\n\n\t/* Método para borrar un proyecto, llama al método deleteProject del servicio del componente (project.service.ts) */\n\tdeleteProject(id) {\n\n\t\tthis._projectService.deleteProject(id).subscribe(\n\t\t\tresponse => {\n\t\t\t\t//si todo ha ido bien hacemos una redirección a la página de proyectos\n\t\t\t\tif(response.project){\n\t\t\t\t\tthis._router.navigate(['/proyectos']);\n\t\t\t\t}\n\t\t\t},\n\t\t\terror => {\n\t\t\t\tconsole.log(\"Error al eliminar el proyecto: \", <any>error);\t\n\t\t\t}\n\t\t);\n\t}\n\n\t//Método que controla la confirmación de borrado del proyecto\n\tsetConfirm(confirm){\n\t\tthis.confirm = confirm;\n\t}\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvZWRpdC1wcm9qZWN0L2VkaXQtcHJvamVjdC5jb21wb25lbnQuY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\n//Modelo del componente\nimport { Project } from '../../models/project';\n//Servicio del componente\nimport { ProjectService } from '../../services/project.service';\n//Servicio encargado de subir archivos\nimport { UploadService } from '../../services/upload.service';\n//Archivo de configuracion global\nimport { Global } from '../../services/global';\n//Módulos necesarios para poder acceder a los parámetros recibidos por URL\nimport { Router, ActivatedRoute, Params } from '@angular/router';\n\n@Component({\n  selector: 'app-edit-project',\n  templateUrl: './edit-project.component.html',\n  styleUrls: ['./edit-project.component.css'],\n   //Cargamos servicio que creamos para trabajar con los proyectos\n  providers: [ProjectService, UploadService]\n})\nexport class EditProjectComponent implements OnInit {\n\n\tpublic title: string;\n\t//Propiedad de tipo Project para el nuevo proyecto\n\tpublic project: Project;\n\t//Para controlar si todo ha ido bien\n\tpublic status: string;\n\tpublic year: Date;\n\t//Recoge los archivos a subir que se recibe del formulario\n\tpublic filesToUpload: Array<File>;\n\t//La usaremos para guardar el id del proyecto guardado y usarlo en la vista para crear el enlace que\n\t//lo muestra en detalle\n\tpublic saveProject: Project;\n\t//para cargar la imagen del proyecto\n\tpublic url: string;\n\n  \tconstructor(\n  \t\t//Creamos las propiedades de los Servicios necesarios\n\t\tprivate _projectService: ProjectService,\n\t\tprivate _uploadService: UploadService,\n\t\t//Servicio de rutas\n\t\tprivate _route: ActivatedRoute\n  \t){\n  \t\tthis.title = \"Editar proyecto\";\n\t\tthis.url = Global.url;\n  \t }\n\n  \tngOnInit() {\n  \t\t//Al cargar el componente recogemos el parámetro que nos llega por la URL y llamamos al método \n\t\t//del componente getProject() creado abajo pasándole el parámetro recogido para cargar la información\n\t\t//del proyecto a editar\n\t\tthis._route.params.subscribe(params => {\n\t\t\t//recogemos el id que nos llega por la url\n\t\t\tlet id = params.id;\n\n\t\t\t//llámamos al método del componente pasandole ya el parámetro recogido\n\t\t\tthis.getProject(id);\n\t\t});\n  \t}\n\n  \t//Método que llama al método del servicio del componente que realiza la petición al backend para \n\t//obtener la información de un proyecto especifico\n\tgetProject(id) {\n\t\t//Ahora invocamos al método de nuestro servicio para obtener la información del proyecto con\n\t\t//el id recibido por parámetro\n\t\tthis._projectService.getProject(id).subscribe(\n\t\t\tresponse => {\n\t\t\t\t//Si todo ha ido bien recogemos el objeto con la información del proyecto para poder\n\t\t\t\t//mostrarla en la vista del componente\n\t\t\t\tthis.project = response.project;\n\t\t\t\t//console.log(\"Proyecto devuelto: \",response.project);\n\t\t\t},\n\t\t\terror => {\n\t\t\t\tconsole.log(<any>error);\n\t\t\t}\n\t\t);\n\t}\n\n\t//En el evento onSubmit llamamos al método de nuestro servicio updateProject pasandole los datos\n\t//del formulario para actualizar el proyecto\n\tonSubmit() {\n\t\tthis._projectService.updateProject(this.project).subscribe(\n\t\t\tresponse => {\n\t\t\t\t//Si nos llega una respuesta satisfactoria\n\t\t\t\tif(response.project){\n\t\t\t\t/*Si los datos se han actualizado correctamente, subimos las imágenes*/\n\t\t\t\t\t//Subir la imagen o imágenes seleccionadas\n\t\t\t\t\t/* 1º parámetro es la url del método de nuestro backend('/upload-image'),en response.project._id tenemos \n\t\t\t\t\t   el id del proyecto creado. 2º parámetro lo dejamos vacío porque es opcional. 3º parámetro son los archivos\n\t\t\t\t\t   a subir. Y el último parámetro es el nombre del campo que va a recibir el backend(Lo tenemos en el archivo\n\t\t\t\t\t   backend/controller/project.js y el método uploadImage) y vemos que el nombre del campo es 'image'\n\t\t\t\t\t*/\n\t\t\t\t\t//Además sólo lo hacemos si filesToUpload tiene algo\n\t\t\t\t\tif(this.filesToUpload){\t\n\t\t\t\t\t\tthis._uploadService.makeFileRequest(Global.url+\"/upload-image/\"+response.project._id, [], this.filesToUpload, 'image')\n\t\t\t\t\t\t.then((result:any) => {\n\t\t\t\t\t\t\t//Guardamos el id del proyecto guardado para crear el enlace en la vista\n\t\t\t\t\t\t\tthis.saveProject = result.project._id;\n\t\t\t\t\t\t\tthis.status = 'success';\n\t\t\t\t\t\t});\n\t\t\t\t\t\t//Si no hay archivos para subir en filesToUpload también guardamos el enlace\n\t\t\t\t\t}else{\n\t\t\t\t\t\t//Guardamos el id del proyecto guardado para crear el enlace en la vista\n\t\t\t\t\t\tthis.saveProject = response.project._id;\n\t\t\t\t\t\tthis.status = 'success';\n\t\t\t\t\t}\n\n\t\t\t\t}else{\n\t\t\t\t\tthis.status = 'failed';\n\t\t\t\t}\n\t\t\t},\n\t\t\terror => {\n\t\t\t\tconsole.log(<any>error);\n\t\t\t\tthis.status = 'failed';\n\t\t\t}\n\t\t);\n\t}\n\n\t//Además necesitamos el fileChangeEvent igual que en el create-projects\n\t//método que recoge los archivos seleccionados en el input de subir imágenes y que invocamos desde el\n\t//formulario cada vez que salta el evento (change) del input.\n\tfileChangeEvent(fileInput: any) {\n\t\t//Casteamos el fileInput a que sea un array de tipo File. fileInput es el objeto que se recibe\n\t\t//cómo parámetro con los archivos seleccionados en el input file. console.log(fileInput) para más información\n\t\t//sobre el objeto recibido\n\t\tthis.filesToUpload = <Array<File>>fileInput.target.files;\n\t}\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvZXJyb3IvZXJyb3IuY29tcG9uZW50LmNzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-error',\n  templateUrl: './error.component.html',\n  styleUrls: ['./error.component.css']\n})\nexport class ErrorComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","export default \".projects{\\n\\tdisplay: block;\\n\\tmargin-left: 20px;\\n}\\n\\n/* Estilos de cada <li> del listado de proyectos */\\n\\n.project{\\n\\tlist-style: none;\\n\\tdisplay: block;\\n\\tfloat: left;\\n\\twidth: 27%;\\n\\ttext-align: center;\\n\\tmargin-left: 20px;\\n\\tmargin-right: 20px;\\n\\tmargin-bottom: 30px;\\n}\\n\\n/* Clase CSS .image que hay dentro de la .project, con ella hacemos la máscara para que corte todo\\nlo que sobresale de lo que indicamos en ella, en este caso el 100% del ancho y 150px de alto. */\\n\\n.project .image{\\n\\twidth: 100%;\\n\\theight: 150px;\\n\\toverflow: hidden;\\n}\\n\\n/* Imágenes dentro de la clase CSS project */\\n\\n.project img{\\n\\twidth: 100%;\\n}\\n\\n/* Enlaces dentro de la clase CSS project*/\\n\\n.project a{\\n\\ttext-decoration: none;\\n\\tcolor: black;\\n}\\n\\n/* Div de paginación */\\n\\n.pagination{\\n\\twidth: 100%;\\n\\tdisplay: block;\\n\\tfloat: left;\\n\\tjustify-content: center;\\n\\ttext-align: center;\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9wcm9qZWN0cy9wcm9qZWN0cy5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0NBQ0MsY0FBYztDQUNkLGlCQUFpQjtBQUNsQjs7QUFFQSxrREFBa0Q7O0FBQ2xEO0NBQ0MsZ0JBQWdCO0NBQ2hCLGNBQWM7Q0FDZCxXQUFXO0NBQ1gsVUFBVTtDQUNWLGtCQUFrQjtDQUNsQixpQkFBaUI7Q0FDakIsa0JBQWtCO0NBQ2xCLG1CQUFtQjtBQUNwQjs7QUFHQTsrRkFDK0Y7O0FBQy9GO0NBQ0MsV0FBVztDQUNYLGFBQWE7Q0FDYixnQkFBZ0I7QUFDakI7O0FBRUEsNENBQTRDOztBQUM1QztDQUNDLFdBQVc7QUFDWjs7QUFFQSwwQ0FBMEM7O0FBQzFDO0NBQ0MscUJBQXFCO0NBQ3JCLFlBQVk7QUFDYjs7QUFFQSxzQkFBc0I7O0FBQ3RCO0NBQ0MsV0FBVztDQUNYLGNBQWM7Q0FDZCxXQUFXO0NBQ1gsdUJBQXVCO0NBQ3ZCLGtCQUFrQjtBQUNuQiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvcHJvamVjdHMvcHJvamVjdHMuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5wcm9qZWN0c3tcblx0ZGlzcGxheTogYmxvY2s7XG5cdG1hcmdpbi1sZWZ0OiAyMHB4O1xufVxuXG4vKiBFc3RpbG9zIGRlIGNhZGEgPGxpPiBkZWwgbGlzdGFkbyBkZSBwcm95ZWN0b3MgKi9cbi5wcm9qZWN0e1xuXHRsaXN0LXN0eWxlOiBub25lO1xuXHRkaXNwbGF5OiBibG9jaztcblx0ZmxvYXQ6IGxlZnQ7XG5cdHdpZHRoOiAyNyU7XG5cdHRleHQtYWxpZ246IGNlbnRlcjtcblx0bWFyZ2luLWxlZnQ6IDIwcHg7XG5cdG1hcmdpbi1yaWdodDogMjBweDtcblx0bWFyZ2luLWJvdHRvbTogMzBweDtcbn1cblxuXG4vKiBDbGFzZSBDU1MgLmltYWdlIHF1ZSBoYXkgZGVudHJvIGRlIGxhIC5wcm9qZWN0LCBjb24gZWxsYSBoYWNlbW9zIGxhIG3DoXNjYXJhIHBhcmEgcXVlIGNvcnRlIHRvZG9cbmxvIHF1ZSBzb2JyZXNhbGUgZGUgbG8gcXVlIGluZGljYW1vcyBlbiBlbGxhLCBlbiBlc3RlIGNhc28gZWwgMTAwJSBkZWwgYW5jaG8geSAxNTBweCBkZSBhbHRvLiAqL1xuLnByb2plY3QgLmltYWdle1xuXHR3aWR0aDogMTAwJTtcblx0aGVpZ2h0OiAxNTBweDtcblx0b3ZlcmZsb3c6IGhpZGRlbjtcbn1cblxuLyogSW3DoWdlbmVzIGRlbnRybyBkZSBsYSBjbGFzZSBDU1MgcHJvamVjdCAqL1xuLnByb2plY3QgaW1ne1xuXHR3aWR0aDogMTAwJTtcbn1cblxuLyogRW5sYWNlcyBkZW50cm8gZGUgbGEgY2xhc2UgQ1NTIHByb2plY3QqL1xuLnByb2plY3QgYXtcblx0dGV4dC1kZWNvcmF0aW9uOiBub25lO1xuXHRjb2xvcjogYmxhY2s7XG59XG5cbi8qIERpdiBkZSBwYWdpbmFjacOzbiAqL1xuLnBhZ2luYXRpb257XG5cdHdpZHRoOiAxMDAlO1xuXHRkaXNwbGF5OiBibG9jaztcblx0ZmxvYXQ6IGxlZnQ7XG5cdGp1c3RpZnktY29udGVudDogY2VudGVyO1xuXHR0ZXh0LWFsaWduOiBjZW50ZXI7XG59XG4iXX0= */\"","import { Component, OnInit } from '@angular/core';\n//Modelo del componente\nimport { Project } from '../../models/project';\n//Servicio del componente\nimport { ProjectService } from '../../services/project.service';\n//Archivo de configuracion global\nimport { Global } from '../../services/global';\n\n@Component({\n  selector: 'app-projects',\n  templateUrl: './projects.component.html',\n  styleUrls: ['./projects.component.css'],\n  providers: [ProjectService]\n})\nexport class ProjectsComponent implements OnInit {\n\n\t//propiedad donde capturaremos los datos de los proyectos para mostrarlos en la vista del componente\n\tpublic projects: Project[];\n\tpublic url: string;\n\t//La usaremos en el componente ngx-pagination\n\tpublic actualPage: number;\n\n\tconstructor(\n\t\t\tprivate _projectService: ProjectService\n\t){\n\t\tthis.url = Global.url;\n\t\tthis.actualPage = 1;\t\t\t\n\t }\n\n\tngOnInit() {\n\t\t//Llámamos al método que lista los proyectos al cargar el componente\n\t\tthis.getProjects();\n\t}\n\n\t//Método que llama al método con el mismo nombre del servicio del componente project.service,\n\t//encargado de devolver todos los proyectos que hay en la colección 'projects' de la base de datos\n\tgetProjects(){\n\t\tthis._projectService.getProjects().subscribe(\n\t\t\tresponse => {\n\t\t\t\tconsole.log(response);\n\t\t\t\t//Si la petición ha ido bien, recogemos  la información de los proyectos en this.projects\n\t\t\t\tif(response.projects){\n\t\t\t\t\tthis.projects = response.projects;\n\t\t\t\t}\n\t\t\t},\n\t\t\terror => {\n\t\t\t\tconsole.log(<any>error);\n\t\t\t}\n\t\t);\n\t}\n\n}","/* Definimos el modelo de la entidad Proyecto (Project)*/\nexport class Project {\n\n\tconstructor(\n\t\tpublic _id: string,\n\t\tpublic name: string,\n\t\tpublic description: string,\n\t\tpublic category: string,\n\t\tpublic year: number,\n\t\tpublic langs: string,\n\t\tpublic image: string\n\t){}\n}\n","// ** Archivo creado para configuraciones globales\nexport var Global = {\n\t//url Api-Rest\n\t//url: 'http://localhost:3700/api/'\n\turl: 'https://portafolio-angular-nodejs.herokuapp.com/api/'\n};","/** Servicio de la entidad Project **/\n\n//Importamos módulos necesarios\nimport { Injectable } from '@angular/core';\n//Para poder hacer peticiones Ajax\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\n/* Nota: Si nos aparece un error al incluir el módulo Observable es posible que tengas que instalar la \nlibrería(rxjs) que incluye el módulo: Para instalar dicha dependencia en el proyecto podemos ejecutar \nel siguiente comando: \n\t-npm install --save rxjs-compat\n*/\nimport { Observable } from 'rxjs/Observable';\n//Modelo de la entidad Project\nimport { Project } from '../models/project';\n//Fichero de configuración global que hemos creado\nimport { Global } from './global';\n\n\n@Injectable()\nexport class ProjectService {\n\tpublic url: string;\n\n\tconstructor(\n\t\tprivate _http: HttpClient\n\t){\n\t\tthis.url = Global.url;\n\t}\n\n\t//Método de prueba\n\ttestService(){\n\t\treturn 'Probando el servicio de la entidad Project';\n\t}\n\n\t//Guarda un nuevo proyecto en la colección projects de la base de datos 'portafolio'\n\t//Declaramos que devuelve un Observable de cualquier tipo\n\tsaveProject(project: Project): Observable<any>{\n\t\t//convertimos los datos recibidos en un objeto JSON para tratarlos con la Api\n\t\tlet params = JSON.stringify(project);\n\t\t//Establecemos las cabezeras(cómo se va a enviar la información, es decir, en qué formato)\n\t\t//Así, establecemos que el Content-Type es de tipo 'application/json'\n\t\tlet headers = new HttpHeaders().set('Content-Type', 'application/json');\n\t\t//hacemos la petición POST\n\t\treturn this._http.post(this.url+'/save-project', params, {headers: headers});\n\t}\n\n\t//Método que obtiene todos los proyectos de la base de datos usando el método para ello de nuestra Api\n\t//de la aplicación(backend)\n\tgetProjects(): Observable<any> {\n\t\tlet headers = new HttpHeaders().set('Content-Type', 'application/json');\n\t\treturn this._http.get(this.url+'get-projects', {headers: headers});\n\t}\n\n\t//Método que devuelve un objeto con toda la información de un proyecto en concreto. Para ello usa el método\n\t//get '/project/:id?' del backend de la aplicación\n\tgetProject(idProject): Observable<any> {\n\t\tlet headers = new HttpHeaders().set('Content-Type', 'application/json');\n\n\t\treturn this._http.get(this.url+'/project/'+idProject, {headers: headers});\n\t}\n\n\t//Método que envía una petición Ajax delete Http con el id del proyecto a borrar\n\tdeleteProject(idProject): Observable<any> {\n\t\tlet headers = new HttpHeaders().set('Content-Type', 'application/json');\n\t\t//.delete es el método Http que nos permite borrar\n\t\treturn this._http.delete(this.url+'delete-project/'+idProject, {headers: headers}); \n\t}\n\n\t//Método que envía una petición Ajax put para actualizar la información de un proyecto \n\tupdateProject(project): Observable<any> {\n\t\t//Convertimos el objeto project recibido con los datos del objeto a actualizar, a un JSON String y pasamos el proyecto entero posteriormente\n\t\tlet params = JSON.stringify(project);\n\t\tlet headers = new HttpHeaders().set('Content-Type', 'application/json');\n\t\t//Usamos el método .put que sirve para actualizar un recurso en el backend\n\t\treturn this._http.put(this.url+'/update-project/'+project._id, params, {headers: headers});\n\t}\n}","import { Injectable } from '@angular/core';\nimport { Global } from './global';\n\n@Injectable()\nexport class UploadService {\n\tpublic url: string;\n\n\tconstructor(){\n\t\tthis.url = Global.url;\n\t}\n\n\t//Método que realiza una petición AJAX clásica en la que adjuntamos un archivo para subir\n\tmakeFileRequest(url: string, params: Array<string>, files: Array<File>, name: string){\n\t\t//si nos devuelve resolve es que la promesa se ha resuelto y si llega reject es que ha devuelto un\n\t\t//error\n\t\treturn new Promise(function(resolve, reject){\n\t\t\t//para la petición necesitamos simular un formulario clásico\n\t\t\t//FormData() nos permite crear un objeto de tipo formulario, en este caso detallamos que será\n\t\t\t//de tipo any para no tener ningún problema\n\t\t\tlet formData:any = new FormData();\n\t\t\t//Creamos variable xhr, qué es sinónimo de ajax, que contendrá un objeto de tipo XMLHttpRequest\n\t\t\t//qué es el tipo de objeto de peticiones asíncronas que siempre ha habido en javascript \n\t\t\tlet xhr = new XMLHttpRequest();\n\n\t\t\t//Bucle que recorre el array de archivos<File> que puede estar llegando\n\t\t\t/* Es decir: Recorre todos los archivos que me llegan, y adjuntalo al formulario con el nombre que\n\t\t\t   se recibe cómo parámetro \"name\", se añade el archivo(ruta) \"files[i]\" y recoge su nombre también\n\t\t\t   files[i].name\n\t\t\t*/\n\t\t\tfor(let i = 0; i < files.length; i++){\n\t\t\t\t//A formData se le añade el name del campo del formulario, el archivo que se añaderá en la\n\t\t\t\t//petición, y el nombre del archivo. Así podremos hacer una petición para subir vario archivos\n\t\t\t\tformData.append(name, files[i], files[i].name);\n\n\t\t\t}\n\n\t\t\t//Definimos al objeto XMLHttpRequest la función que se encarga de procesar la respuesta de la\n\t\t\t//petición\n\t\t\txhr.onreadystatechange = function(){\n\t\t\t\tif(xhr.readyState == 4){\n\t\t\t\t\tif(xhr.status == 200){\n\t\t\t\t\t\tresolve(JSON.parse(xhr.response));\n\t\t\t\t\t}else{\n\t\t\t\t\t\treject(xhr.response);\n\t\t\t\t\t}\n\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t//Se realiza la petición Ajax por POST enviandole el formulario\n\t\t\t//mediante post, a la url indicada, El tercer parámetro establece si la petición es asíncrona. Si se \n\t\t\t//define TRUE, la ejecución de la función de JavaScript continuará aún cuando la respuesta del servidor \n\t\t\t//no haya llegado. Por esta capacidad es la A en AJAX.\n\t\t\txhr.open('POST', url, true);\n\t\t\txhr.send(formData);\n\n\t\t});\n\t}\n}","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}